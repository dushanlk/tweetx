{"version":3,"sources":["actions/fetchTweets.js","containers/SearchTweets.js","components/TweetCard.js","components/TweetCardList.js","containers/SearchResult.js","components/ResultStats.js","containers/ResultStatContainer.js","components/App.js","reducers/tweets.js","reducers/hashTags.js","reducers/tweetsFetchStatus.js","reducers/message.js","reducers/index.js","index.js"],"names":["REQUEST_TWEETS","RECEIVE_TWEETS","RECEIVE_ERROR","fetchTweets","keyword","dispatch","type","requestTweets","fetch","concat","then","response","status","json","Error","data","message","receiveTweets","catch","error","console","receiveError","connect","_ref","input","react_default","a","createElement","onSubmit","e","preventDefault","value","trim","Grid","container","style","marginTop","item","xs","TextField","id","margin","placeholder","fullWidth","InputLabelProps","shrink","inputRef","node","TweetCard","tweet","user","time","image","Paper","padding","Avatar","alt","src","marginLeft","Typography","variant","gutterBottom","Box","fontWeight","align","dist_default","TweetCardList","tweets","map","components_TweetCard","text","key","createdDateTime","userProfileImage","LinearProgress","state","tweetsFetchStatus","ResultStats","numOfTweets","hashTags","display","hashTag","Chip","size","marginRight","label","count","length","App","containers_SearchTweets","ResultStatContainer","SearchResult","arguments","undefined","action","topHashTags","combineReducers","loggerMiddleware","createLogger","store","createStore","rootReducer","applyMiddleware","thunkMiddleware","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.12320050.chunk.js","sourcesContent":["import fetch from 'cross-fetch'\n\nexport const REQUEST_TWEETS = \"REQUEST_TWEETS\"\n\nfunction requestTweets(keyword) {\n    return {\n        type: REQUEST_TWEETS,\n        keyword\n    }\n}\n\nexport const RECEIVE_TWEETS = \"RECEIVE_TWEETS\"\n\nfunction receiveTweets(keyword, json) {\n    return {\n        type: RECEIVE_TWEETS,\n        keyword,\n        data: json,\n        message: \"SUCCESS\"\n    }\n}\n\nexport const RECEIVE_ERROR = \"RECEIVE_ERROR\"\n\nfunction receiveError(keyword, message) {\n    console.error(`Error occurred while fetching tweets ${message}`)\n    return {\n        type: RECEIVE_ERROR,\n        keyword,\n        message: message\n    }\n}\n\nexport function fetchTweets(keyword) {\n    return function (dispatch) {\n\n        dispatch(requestTweets(keyword))\n        return fetch(`http://localhost:7007/cxf/api/search/${keyword}`)\n            .then((response) => {\n                if (response.status === 200) {\n                    return response.json()\n                } else if (response.status === 204) {\n                    throw Error(`No tweets found for the keyword \"${keyword}\", try another!`)\n                } else {\n                    throw Error(\"Oops! Something went wrong!\")\n                }\n            })\n            .then(\n                json => dispatch(receiveTweets(keyword, json))\n            )\n            .catch(function (error) {\n                dispatch(receiveError(keyword, error.message))\n            })\n    }\n}\n\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport {fetchTweets} from '../actions/fetchTweets'\n\nconst SearchTweets = ({dispatch}) => {\n    let input\n\n    return (\n        <div>\n            <form onSubmit={e => {\n                e.preventDefault()\n                if (!input.value.trim()) {\n                    return\n                }\n                dispatch(fetchTweets(input.value))\n                input.value = ''\n            }}>\n                <Grid container style={{marginTop: 50}}>\n                    <Grid item xs={3}>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <TextField\n                            id=\"standard-full-width\"\n                            style={{margin: 8}}\n                            placeholder=\"Search your favourite Tweet here!\"\n                            fullWidth\n                            margin=\"normal\"\n                            InputLabelProps={{\n                                shrink: true,\n                            }}\n                            inputRef={node => input = node}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                    </Grid>\n                </Grid>\n            </form>\n        </div>\n    )\n}\n\nexport default connect()(SearchTweets)\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from \"@material-ui/core/Grid\";\nimport {Box} from \"@material-ui/core\";\nimport Linkify from 'react-linkify';\n\nconst TweetCard = ({tweet, user, time, image}) => (\n    <Paper style={{marginTop: 15, padding: 20}}>\n        <Grid container>\n            <Grid item>\n                <Avatar alt={user} src={image}/>\n            </Grid>\n            <Grid item style={{marginLeft: 10}}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                    <b>{user}</b>\n                </Typography>\n            </Grid>\n            <Grid item xs={3} style={{marginLeft: 10}}>\n                <Typography variant=\"subtitle1\" gutterBottom>\n                    <Box fontWeight=\"fontWeightLight\">{time}</Box>\n                </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop: 20}}>\n                <Typography variant=\"body1\" gutterBottom align={'justify'}>\n                    <Linkify>{tweet}</Linkify>\n                </Typography>\n            </Grid>\n        </Grid>\n        <br/>\n    </Paper>\n)\n\nexport default TweetCard\n","import React from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport TweetCard from './TweetCard'\nimport {RECEIVE_ERROR, RECEIVE_TWEETS, REQUEST_TWEETS,} from \"../actions/fetchTweets\";\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst TweetCardList = ({tweets, status, message}) => (\n    <Grid container style={{marginTop: 30}}>\n        <Grid item xs={3}>\n        </Grid>\n        <Grid item xs={6}>\n            {\n                status === RECEIVE_TWEETS ?\n                    tweets.map(tweet =>\n                        <TweetCard tweet={tweet.text}\n                                   key={tweet.id}\n                                   user={tweet.user}\n                                   time={tweet.createdDateTime}\n                                   image={tweet.userProfileImage}/>\n                    ) : \"\"\n            }\n            {\n                status === REQUEST_TWEETS ? <LinearProgress style={{marginTop: 50}}/> : \"\"\n            }\n            {\n                status === RECEIVE_ERROR ?\n                    <Typography variant=\"h5\" gutterBottom align={'center'} style={{marginTop: 50}}>\n                        {message}\n                    </Typography> : \"\"\n\n            }\n        </Grid>\n        <Grid item xs={3}>\n        </Grid>\n    </Grid>\n)\n\nexport default TweetCardList\n","import {connect} from \"react-redux\";\nimport TweetCardList from \"../components/TweetCardList\";\n\n\nconst mapStatesToProps = state => ({\n    tweets: state.tweets,\n    status: state.tweetsFetchStatus,\n    message: state.message\n})\n\nexport default connect(\n    mapStatesToProps\n)(TweetCardList)","import React from 'react'\nimport Grid from \"@material-ui/core/Grid\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {RECEIVE_TWEETS} from \"../actions/fetchTweets\";\n\nconst ResultStats = ({numOfTweets, hashTags, type}) => (\n    <Grid container style={{marginTop: 35}}>\n        <Grid item xs={3}>\n        </Grid>\n        {\n            type === RECEIVE_TWEETS ?\n                <Grid item xs={6}>\n                    <Typography variant=\"button\" display=\"block\" gutterBottom>\n                        Found {numOfTweets} Tweets\n                    </Typography>\n                </Grid>\n                : \"\"\n        }\n        <Grid item xs={3}>\n        </Grid>\n\n        <Grid item xs={3}>\n        </Grid>\n        {\n            type === RECEIVE_TWEETS ?\n                <Grid item xs={6}>\n                    {\n                        hashTags.map(hashTag => <Chip variant=\"outlined\" size=\"medium\"\n                                                      key={hashTag.text}\n                                                      style={{marginRight: 10, marginTop: 10}}\n                                                      label={hashTag.text + \" \" + hashTag.count}/>)\n                    }\n                </Grid>\n                : \"\"\n        }\n        <Grid item xs={3}>\n        </Grid>\n    </Grid>\n)\n\nexport default ResultStats\n","import {connect} from \"react-redux\";\nimport ResultStats from \"../components/ResultStats\";\n\n\nconst mapStatesToProps = state => ({\n    numOfTweets: state.tweets.length,\n    hashTags: state.hashTags,\n    type: state.tweetsFetchStatus\n})\n\nexport default connect(\n    mapStatesToProps\n)(ResultStats)","import React from 'react'\nimport SearchTweets from '../containers/SearchTweets'\nimport SearchResult from '../containers/SearchResult'\nimport ResultStatContainer from '../containers/ResultStatContainer'\nimport 'typeface-roboto';\n\nconst App = () => (\n    <div>\n        <SearchTweets/>\n        <ResultStatContainer/>\n        <SearchResult/>\n    </div>\n)\n\nexport default App\n","import {RECEIVE_TWEETS} from \"../actions/fetchTweets\";\n\nconst tweets = (state = [], action) => {\n    return action.type === RECEIVE_TWEETS ? action.data.tweets : []\n}\n\nexport default tweets","import {RECEIVE_TWEETS} from \"../actions/fetchTweets\";\n\nconst hashTags = (state, action) => {\n    return action.type === RECEIVE_TWEETS ? action.data.topHashTags : []\n}\n\nexport default hashTags","const tweetsFetchStatus = (state, action) => {\n    return action.type\n}\n\nexport default tweetsFetchStatus","import {RECEIVE_ERROR} from \"../actions/fetchTweets\";\n\nconst message = (state, action) => {\n    return action.type === RECEIVE_ERROR ? action.message : \"\"\n}\n\nexport default message","import {combineReducers} from 'redux'\nimport tweets from './tweets'\nimport hashTags from './hashTags'\nimport tweetsFetchStatus from './tweetsFetchStatus'\nimport message from './message'\n\nexport default combineReducers({\n    tweets,\n    tweetsFetchStatus,\n    hashTags,\n    message\n})\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport App from './components/App'\nimport rootReducer from './reducers'\nimport thunkMiddleware from 'redux-thunk'\nimport {createLogger} from 'redux-logger'\n\nconst loggerMiddleware = createLogger()\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(thunkMiddleware, loggerMiddleware)\n)\n\nrender(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}